diff --git a/lib/ambassador/Ambassador.cpp b/lib/ambassador/Ambassador.cpp
index bf3de71..77acbce 100644
--- a/lib/ambassador/Ambassador.cpp
+++ b/lib/ambassador/Ambassador.cpp
@@ -3,7 +3,7 @@
 using namespace ambassador;
 //==========================================message queue==========================================
 msgQImpl::msgQImpl(std::string_view aName, bool writeVal, bool readVal):
-    mq(boost::interprocess::open_or_create, aName.data(), MSG_MAX_COUNT, MSG_MAX_SIZE),
+    // mq(boost::interprocess::open_or_create, aName.data(), MSG_MAX_COUNT, MSG_MAX_SIZE),
     name(aName), writeBool(writeVal), readBool(readVal) { }
 
 std::string_view msgQImpl::read()
@@ -14,12 +14,12 @@ std::string_view msgQImpl::read()
     // read one msg from queue
     char newBuf[MSG_MAX_SIZE];
     unsigned int priority;
-    boost::interprocess::message_queue::size_type recvd_size;
+    // boost::interprocess::message_queue::size_type recvd_size;
     // try_receive so doesnt block if queue empty
-    if(!mq.try_receive(newBuf, MSG_MAX_SIZE, recvd_size, priority))
+    // if(!mq.try_receive(newBuf, MSG_MAX_SIZE, recvd_size, priority))
         return "";
 
-    return std::string_view(newBuf, newBuf + recvd_size);
+    // return std::string_view(newBuf, newBuf + recvd_size);
 }
 
 int msgQImpl::write(std::string_view input)
@@ -32,7 +32,7 @@ int msgQImpl::write(std::string_view input)
     strcpy(newBuf, input.data());
 
     // try_send so doesnt block if queue busy
-    if(!mq.try_send(newBuf, sizeof(newBuf), 0))
+    // if(!mq.try_send(newBuf, sizeof(newBuf), 0))
         return -1;
 
     return 0;
@@ -42,7 +42,7 @@ msgQImpl::~msgQImpl()
 {
     // clean up queue
     // [TODO:] not called on program crash -> make cleanup daemon to make sure deleted?
-    boost::interprocess::message_queue::remove(name.data());
+    // boost::interprocess::message_queue::remove(name.data());
 }
 
 
diff --git a/lib/ambassador/Ambassador.h b/lib/ambassador/Ambassador.h
index 85c9a9e..bb421bd 100644
--- a/lib/ambassador/Ambassador.h
+++ b/lib/ambassador/Ambassador.h
@@ -9,7 +9,7 @@
 #include <iostream>
 #include <string_view>
 #include "../nlohmann/json.hpp"
-#include <boost/interprocess/ipc/message_queue.hpp>
+// #include <boost/interprocess/ipc/message_queue.hpp>
 
 #define MSG_MAX_SIZE 600
 #define MSG_MAX_COUNT 100
@@ -92,7 +92,7 @@ struct msgQImpl : public msgQ
         std::string_view read();
         int write(std::string_view input);
     private:
-        boost::interprocess::message_queue mq;
+        // boost::interprocess::message_queue mq;
         std::string_view name;
         bool writeBool;
         bool readBool;
diff --git a/lib/ambassador/CMakeLists.txt b/lib/ambassador/CMakeLists.txt
index a36d3ad..e64dd4c 100644
--- a/lib/ambassador/CMakeLists.txt
+++ b/lib/ambassador/CMakeLists.txt
@@ -6,7 +6,7 @@ set(Boost_USE_RELEASE_LIBS       ON)  # only find release libs
 set(Boost_USE_MULTITHREADED      ON)
 set(Boost_USE_STATIC_RUNTIME    OFF)
 
-find_package(Boost 1.72 COMPONENTS date_time REQUIRED)
+# find_package(Boost 1.72 COMPONENTS date_time REQUIRED)
 if(Boost_FOUND)
   include_directories(${Boost_INCLUDE_DIRS})
 endif()
